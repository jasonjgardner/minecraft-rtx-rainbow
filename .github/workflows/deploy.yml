name: Deno Deploy
on:
  push:
    branches: [ deploy ]

  workflow_dispatch:

jobs:
  job:
    name: Deno Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout deploy branch
      uses: actions/checkout@v2
      with:
        ref: deploy
    - name: Setup Deno
      uses: denolib/setup-deno@v2
      with:
          deno-version: 1.22.0
    - name: Install Deno build dependencies
      run: |
        deno run -A https://deno.land/x/packup@v0.1.12/install.ts
        packup -v
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    - name: Install NPM build dependencies
      run: npm ci
    - name: Compile Tailwind
      run: npm run tailwind:prod
    - name: Compile frontend
      run: packup build index.html --dist-dir ./deploy/dist --static-dir ./static
    - name: Copy backend
      run: |
        mkdir ./deploy
        mkdir ./deploy/typings
        mkdir ./deploy/src
        mkdir ./deploy/src/components
        mkdir ./deploy/src/assets
        mkdir ./deploy/src/assets/img
        mkdir ./deploy/src/assets/materials
        cp ./import_map.json ./deploy/import_map.json
        cp ./src/mod.ts ./deploy/src/mod.ts
        cp ./src/app.ts ./deploy/src/app.ts
        cp -R ./typings ./deploy/typings
        cp -R ./src/components ./deploy/src/components
        cp -R ./src/assets/img ./deploy/src/assets/img
        cp -R ./src/assets/materials ./deploy/src/assets/materials
    - name: Deploy to Deno Deploy
      uses: denoland/deployctl@v1
      with:
        project: "minecraft-pixel-art"
        import-map: "import_map.json"
        entrypoint: "src/app.ts"
        root: ./deploy
