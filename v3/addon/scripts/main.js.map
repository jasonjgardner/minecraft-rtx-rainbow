{
  "version": 3,
  "sources": ["..\\..\\src\\main.ts"],
  "sourcesContent": [
    "import {\r\n  BlockPermutation,\r\n  Entity,\r\n  EntityComponentTypes,\r\n  system,\r\n  world,\r\n} from \"@minecraft/server\";\r\n\r\nconst overworld = world.getDimension(\"overworld\");\r\nconst colors = [\r\n  \"blue\",\r\n  \"brown\",\r\n  \"cyan\",\r\n  \"gray\",\r\n  \"green\",\r\n  \"light_blue\",\r\n  \"light_gray\",\r\n  \"lime\",\r\n  \"magenta\",\r\n  \"orange\",\r\n  \"pink\",\r\n  \"purple\",\r\n  \"red\",\r\n  // \"white\",\r\n  \"yellow\",\r\n];\r\n\r\nfunction placeColorBlock(entity: Entity, color: string) {\r\n  const { x, y, z } = entity.location;\r\n\r\n  const block = overworld.getBlock({ x, y: y - 1, z });\r\n  block?.north(1)?.setPermutation(\r\n    BlockPermutation.resolve(`rainbow:${color}_400_lamp`),\r\n  );\r\n}\r\n\r\nfunction createBlockTrail(entity: Entity, color: string) {\r\n  const entQuery = {\r\n    tags: [\"trail\"],\r\n  };\r\n\r\n  for (const color of colors) {\r\n    const q = entQuery;\r\n    q.tags.push(color);\r\n    for (const ent of overworld.getEntities(q)) {\r\n      placeColorBlock(ent, color);\r\n    }\r\n  }\r\n}\r\n\r\nsystem.afterEvents.scriptEventReceive.subscribe((event) => {\r\n  const {\r\n    id, // returns string (wiki:test)\r\n    initiator, // returns Entity\r\n    message, // returns string (Hello World)\r\n    sourceBlock, // returns Block\r\n    sourceEntity, // returns Entity\r\n    sourceType, // returns MessageSourceType\r\n  } = event;\r\n\r\n  if (!initiator) {\r\n    return;\r\n  }\r\n\r\n  if (id.includes(\"rainbow\")) {\r\n    for (const color of colors) {\r\n      if (message.includes(color)) {\r\n        createBlockTrail(initiator, color);\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA,IAAS,0BAAe,CAAC,QAAgB,OAAe;AACtD,UAAQ,GAAG,GAAG,MAAM,OAAO;AAE3B,QAAM,QAAQ,UAAU,SAAS,EAAE,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;AACnD,SAAO,MAAM,CAAC,GAAG,eACf,iBAAiB,QAAQ,WAAW,gBAAgB,CACtD;AAAA;AAGF,IAAS,2BAAgB,CAAC,QAAgB,OAAe;AACvD,QAAM,WAAW;AAAA,IACf,MAAM,CAAC,OAAO;AAAA,EAChB;AAEA,aAAW,UAAS,QAAQ;AAC1B,UAAM,IAAI;AACV,MAAE,KAAK,KAAK,MAAK;AACjB,eAAW,OAAO,UAAU,YAAY,CAAC,GAAG;AAC1C,sBAAgB,KAAK,MAAK;AAAA,IAC5B;AAAA,EACF;AAAA;AAvCF,IAAM,YAAY,MAAM,aAAa,WAAW;AAChD,IAAM,SAAS;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AACF;AAyBA,OAAO,YAAY,mBAAmB,UAAU,CAAC,UAAU;AACzD;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MACE;AAEJ,OAAK,WAAW;AACd;AAAA,EACF;AAEA,MAAI,GAAG,SAAS,SAAS,GAAG;AAC1B,eAAW,SAAS,QAAQ;AAC1B,UAAI,QAAQ,SAAS,KAAK,GAAG;AAC3B,yBAAiB,WAAW,KAAK;AAAA,MACnC;AAAA,IACF;AAAA,EACF;AAAA,CACD;",
  "debugId": "F0C8C94565ED06A864756E2164756E21",
  "names": []
}