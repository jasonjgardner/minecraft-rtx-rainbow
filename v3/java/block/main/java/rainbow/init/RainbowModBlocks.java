
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package rainbow.init;

import rainbow.block.Yellow900BlockBlock;
import rainbow.block.Yellow800BlockBlock;
import rainbow.block.Yellow700BlockBlock;
import rainbow.block.Yellow600BlockBlock;
import rainbow.block.Yellow50BlockBlock;
import rainbow.block.Yellow500BlockBlock;
import rainbow.block.Yellow400BlockBlock;
import rainbow.block.Yellow300BlockBlock;
import rainbow.block.Yellow200BlockBlock;
import rainbow.block.Yellow100BlockBlock;
import rainbow.block.Red900BlockBlock;
import rainbow.block.Red800BlockBlock;
import rainbow.block.Red700BlockBlock;
import rainbow.block.Red600BlockBlock;
import rainbow.block.Red50BlockBlock;
import rainbow.block.Red500BlockBlock;
import rainbow.block.Red400BlockBlock;
import rainbow.block.Red300BlockBlock;
import rainbow.block.Red200BlockBlock;
import rainbow.block.Red100BlockBlock;
import rainbow.block.Purple900BlockBlock;
import rainbow.block.Purple800BlockBlock;
import rainbow.block.Purple700BlockBlock;
import rainbow.block.Purple600BlockBlock;
import rainbow.block.Purple50BlockBlock;
import rainbow.block.Purple500BlockBlock;
import rainbow.block.Purple400BlockBlock;
import rainbow.block.Purple300BlockBlock;
import rainbow.block.Purple200BlockBlock;
import rainbow.block.Purple100BlockBlock;
import rainbow.block.Pink900BlockBlock;
import rainbow.block.Pink800BlockBlock;
import rainbow.block.Pink700BlockBlock;
import rainbow.block.Pink600BlockBlock;
import rainbow.block.Pink50BlockBlock;
import rainbow.block.Pink500BlockBlock;
import rainbow.block.Pink400BlockBlock;
import rainbow.block.Pink300BlockBlock;
import rainbow.block.Pink200BlockBlock;
import rainbow.block.Pink100BlockBlock;
import rainbow.block.Orange900BlockBlock;
import rainbow.block.Orange800BlockBlock;
import rainbow.block.Orange700BlockBlock;
import rainbow.block.Orange600BlockBlock;
import rainbow.block.Orange50BlockBlock;
import rainbow.block.Orange500BlockBlock;
import rainbow.block.Orange400BlockBlock;
import rainbow.block.Orange300BlockBlock;
import rainbow.block.Orange200BlockBlock;
import rainbow.block.Orange100BlockBlock;
import rainbow.block.Magenta900BlockBlock;
import rainbow.block.Magenta800BlockBlock;
import rainbow.block.Magenta700BlockBlock;
import rainbow.block.Magenta600BlockBlock;
import rainbow.block.Magenta50BlockBlock;
import rainbow.block.Magenta500BlockBlock;
import rainbow.block.Magenta400BlockBlock;
import rainbow.block.Magenta300BlockBlock;
import rainbow.block.Magenta200BlockBlock;
import rainbow.block.Magenta100BlockBlock;
import rainbow.block.Lime900BlockBlock;
import rainbow.block.Lime800BlockBlock;
import rainbow.block.Lime700BlockBlock;
import rainbow.block.Lime600BlockBlock;
import rainbow.block.Lime50BlockBlock;
import rainbow.block.Lime500BlockBlock;
import rainbow.block.Lime400BlockBlock;
import rainbow.block.Lime300BlockBlock;
import rainbow.block.Lime200BlockBlock;
import rainbow.block.Lime100BlockBlock;
import rainbow.block.LightGray900BlockBlock;
import rainbow.block.LightGray800BlockBlock;
import rainbow.block.LightGray700BlockBlock;
import rainbow.block.LightGray600BlockBlock;
import rainbow.block.LightGray50BlockBlock;
import rainbow.block.LightGray500BlockBlock;
import rainbow.block.LightGray400BlockBlock;
import rainbow.block.LightGray300BlockBlock;
import rainbow.block.LightGray200BlockBlock;
import rainbow.block.LightGray100BlockBlock;
import rainbow.block.LightBlue900BlockBlock;
import rainbow.block.LightBlue800BlockBlock;
import rainbow.block.LightBlue700BlockBlock;
import rainbow.block.LightBlue600BlockBlock;
import rainbow.block.LightBlue50BlockBlock;
import rainbow.block.LightBlue500BlockBlock;
import rainbow.block.LightBlue400BlockBlock;
import rainbow.block.LightBlue300BlockBlock;
import rainbow.block.LightBlue200BlockBlock;
import rainbow.block.LightBlue100BlockBlock;
import rainbow.block.Green900BlockBlock;
import rainbow.block.Green800BlockBlock;
import rainbow.block.Green700BlockBlock;
import rainbow.block.Green600BlockBlock;
import rainbow.block.Green50BlockBlock;
import rainbow.block.Green500BlockBlock;
import rainbow.block.Green400BlockBlock;
import rainbow.block.Green300BlockBlock;
import rainbow.block.Green200BlockBlock;
import rainbow.block.Green100BlockBlock;
import rainbow.block.Gray900BlockBlock;
import rainbow.block.Gray800BlockBlock;
import rainbow.block.Gray700BlockBlock;
import rainbow.block.Gray600BlockBlock;
import rainbow.block.Gray50BlockBlock;
import rainbow.block.Gray500BlockBlock;
import rainbow.block.Gray400BlockBlock;
import rainbow.block.Gray300BlockBlock;
import rainbow.block.Gray200BlockBlock;
import rainbow.block.Gray100BlockBlock;
import rainbow.block.Cyan900BlockBlock;
import rainbow.block.Cyan800BlockBlock;
import rainbow.block.Cyan700BlockBlock;
import rainbow.block.Cyan600BlockBlock;
import rainbow.block.Cyan50BlockBlock;
import rainbow.block.Cyan500BlockBlock;
import rainbow.block.Cyan400BlockBlock;
import rainbow.block.Cyan300BlockBlock;
import rainbow.block.Cyan200BlockBlock;
import rainbow.block.Cyan100BlockBlock;
import rainbow.block.Brown900BlockBlock;
import rainbow.block.Brown800BlockBlock;
import rainbow.block.Brown700BlockBlock;
import rainbow.block.Brown600BlockBlock;
import rainbow.block.Brown50BlockBlock;
import rainbow.block.Brown500BlockBlock;
import rainbow.block.Brown400BlockBlock;
import rainbow.block.Brown300BlockBlock;
import rainbow.block.Brown200BlockBlock;
import rainbow.block.Brown100BlockBlock;
import rainbow.block.Blue900BlockBlock;
import rainbow.block.Blue800BlockBlock;
import rainbow.block.Blue700BlockBlock;
import rainbow.block.Blue600BlockBlock;
import rainbow.block.Blue50BlockBlock;
import rainbow.block.Blue500BlockBlock;
import rainbow.block.Blue400BlockBlock;
import rainbow.block.Blue300BlockBlock;
import rainbow.block.Blue200BlockBlock;
import rainbow.block.Blue100BlockBlock;

import rainbow.RainbowMod;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

public class RainbowModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, RainbowMod.MODID);
	public static final RegistryObject<Block> BLUE_100_BLOCK = REGISTRY.register("blue_100_block", () -> new Blue100BlockBlock());
	public static final RegistryObject<Block> BLUE_50_BLOCK = REGISTRY.register("blue_50_block", () -> new Blue50BlockBlock());
	public static final RegistryObject<Block> BLUE_200_BLOCK = REGISTRY.register("blue_200_block", () -> new Blue200BlockBlock());
	public static final RegistryObject<Block> BLUE_300_BLOCK = REGISTRY.register("blue_300_block", () -> new Blue300BlockBlock());
	public static final RegistryObject<Block> BLUE_400_BLOCK = REGISTRY.register("blue_400_block", () -> new Blue400BlockBlock());
	public static final RegistryObject<Block> BLUE_500_BLOCK = REGISTRY.register("blue_500_block", () -> new Blue500BlockBlock());
	public static final RegistryObject<Block> BLUE_600_BLOCK = REGISTRY.register("blue_600_block", () -> new Blue600BlockBlock());
	public static final RegistryObject<Block> BLUE_700_BLOCK = REGISTRY.register("blue_700_block", () -> new Blue700BlockBlock());
	public static final RegistryObject<Block> BLUE_800_BLOCK = REGISTRY.register("blue_800_block", () -> new Blue800BlockBlock());
	public static final RegistryObject<Block> BLUE_900_BLOCK = REGISTRY.register("blue_900_block", () -> new Blue900BlockBlock());
	public static final RegistryObject<Block> BROWN_50_BLOCK = REGISTRY.register("brown_50_block", () -> new Brown50BlockBlock());
	public static final RegistryObject<Block> BROWN_100_BLOCK = REGISTRY.register("brown_100_block", () -> new Brown100BlockBlock());
	public static final RegistryObject<Block> BROWN_200_BLOCK = REGISTRY.register("brown_200_block", () -> new Brown200BlockBlock());
	public static final RegistryObject<Block> BROWN_300_BLOCK = REGISTRY.register("brown_300_block", () -> new Brown300BlockBlock());
	public static final RegistryObject<Block> BROWN_400_BLOCK = REGISTRY.register("brown_400_block", () -> new Brown400BlockBlock());
	public static final RegistryObject<Block> BROWN_500_BLOCK = REGISTRY.register("brown_500_block", () -> new Brown500BlockBlock());
	public static final RegistryObject<Block> BROWN_600_BLOCK = REGISTRY.register("brown_600_block", () -> new Brown600BlockBlock());
	public static final RegistryObject<Block> BROWN_700_BLOCK = REGISTRY.register("brown_700_block", () -> new Brown700BlockBlock());
	public static final RegistryObject<Block> BROWN_800_BLOCK = REGISTRY.register("brown_800_block", () -> new Brown800BlockBlock());
	public static final RegistryObject<Block> BROWN_900_BLOCK = REGISTRY.register("brown_900_block", () -> new Brown900BlockBlock());
	public static final RegistryObject<Block> CYAN_50_BLOCK = REGISTRY.register("cyan_50_block", () -> new Cyan50BlockBlock());
	public static final RegistryObject<Block> CYAN_100_BLOCK = REGISTRY.register("cyan_100_block", () -> new Cyan100BlockBlock());
	public static final RegistryObject<Block> CYAN_200_BLOCK = REGISTRY.register("cyan_200_block", () -> new Cyan200BlockBlock());
	public static final RegistryObject<Block> CYAN_300_BLOCK = REGISTRY.register("cyan_300_block", () -> new Cyan300BlockBlock());
	public static final RegistryObject<Block> CYAN_400_BLOCK = REGISTRY.register("cyan_400_block", () -> new Cyan400BlockBlock());
	public static final RegistryObject<Block> CYAN_500_BLOCK = REGISTRY.register("cyan_500_block", () -> new Cyan500BlockBlock());
	public static final RegistryObject<Block> CYAN_600_BLOCK = REGISTRY.register("cyan_600_block", () -> new Cyan600BlockBlock());
	public static final RegistryObject<Block> CYAN_700_BLOCK = REGISTRY.register("cyan_700_block", () -> new Cyan700BlockBlock());
	public static final RegistryObject<Block> CYAN_800_BLOCK = REGISTRY.register("cyan_800_block", () -> new Cyan800BlockBlock());
	public static final RegistryObject<Block> CYAN_900_BLOCK = REGISTRY.register("cyan_900_block", () -> new Cyan900BlockBlock());
	public static final RegistryObject<Block> GRAY_50_BLOCK = REGISTRY.register("gray_50_block", () -> new Gray50BlockBlock());
	public static final RegistryObject<Block> GRAY_100_BLOCK = REGISTRY.register("gray_100_block", () -> new Gray100BlockBlock());
	public static final RegistryObject<Block> GRAY_200_BLOCK = REGISTRY.register("gray_200_block", () -> new Gray200BlockBlock());
	public static final RegistryObject<Block> GRAY_300_BLOCK = REGISTRY.register("gray_300_block", () -> new Gray300BlockBlock());
	public static final RegistryObject<Block> GRAY_400_BLOCK = REGISTRY.register("gray_400_block", () -> new Gray400BlockBlock());
	public static final RegistryObject<Block> GRAY_500_BLOCK = REGISTRY.register("gray_500_block", () -> new Gray500BlockBlock());
	public static final RegistryObject<Block> GRAY_600_BLOCK = REGISTRY.register("gray_600_block", () -> new Gray600BlockBlock());
	public static final RegistryObject<Block> GRAY_700_BLOCK = REGISTRY.register("gray_700_block", () -> new Gray700BlockBlock());
	public static final RegistryObject<Block> GRAY_800_BLOCK = REGISTRY.register("gray_800_block", () -> new Gray800BlockBlock());
	public static final RegistryObject<Block> GRAY_900_BLOCK = REGISTRY.register("gray_900_block", () -> new Gray900BlockBlock());
	public static final RegistryObject<Block> GREEN_50_BLOCK = REGISTRY.register("green_50_block", () -> new Green50BlockBlock());
	public static final RegistryObject<Block> GREEN_100_BLOCK = REGISTRY.register("green_100_block", () -> new Green100BlockBlock());
	public static final RegistryObject<Block> GREEN_200_BLOCK = REGISTRY.register("green_200_block", () -> new Green200BlockBlock());
	public static final RegistryObject<Block> GREEN_300_BLOCK = REGISTRY.register("green_300_block", () -> new Green300BlockBlock());
	public static final RegistryObject<Block> GREEN_400_BLOCK = REGISTRY.register("green_400_block", () -> new Green400BlockBlock());
	public static final RegistryObject<Block> GREEN_500_BLOCK = REGISTRY.register("green_500_block", () -> new Green500BlockBlock());
	public static final RegistryObject<Block> GREEN_600_BLOCK = REGISTRY.register("green_600_block", () -> new Green600BlockBlock());
	public static final RegistryObject<Block> GREEN_700_BLOCK = REGISTRY.register("green_700_block", () -> new Green700BlockBlock());
	public static final RegistryObject<Block> GREEN_800_BLOCK = REGISTRY.register("green_800_block", () -> new Green800BlockBlock());
	public static final RegistryObject<Block> GREEN_900_BLOCK = REGISTRY.register("green_900_block", () -> new Green900BlockBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_50_BLOCK = REGISTRY.register("light_blue_50_block", () -> new LightBlue50BlockBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_100_BLOCK = REGISTRY.register("light_blue_100_block", () -> new LightBlue100BlockBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_200_BLOCK = REGISTRY.register("light_blue_200_block", () -> new LightBlue200BlockBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_300_BLOCK = REGISTRY.register("light_blue_300_block", () -> new LightBlue300BlockBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_400_BLOCK = REGISTRY.register("light_blue_400_block", () -> new LightBlue400BlockBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_500_BLOCK = REGISTRY.register("light_blue_500_block", () -> new LightBlue500BlockBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_600_BLOCK = REGISTRY.register("light_blue_600_block", () -> new LightBlue600BlockBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_700_BLOCK = REGISTRY.register("light_blue_700_block", () -> new LightBlue700BlockBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_800_BLOCK = REGISTRY.register("light_blue_800_block", () -> new LightBlue800BlockBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_900_BLOCK = REGISTRY.register("light_blue_900_block", () -> new LightBlue900BlockBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_50_BLOCK = REGISTRY.register("light_gray_50_block", () -> new LightGray50BlockBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_100_BLOCK = REGISTRY.register("light_gray_100_block", () -> new LightGray100BlockBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_200_BLOCK = REGISTRY.register("light_gray_200_block", () -> new LightGray200BlockBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_300_BLOCK = REGISTRY.register("light_gray_300_block", () -> new LightGray300BlockBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_400_BLOCK = REGISTRY.register("light_gray_400_block", () -> new LightGray400BlockBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_500_BLOCK = REGISTRY.register("light_gray_500_block", () -> new LightGray500BlockBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_600_BLOCK = REGISTRY.register("light_gray_600_block", () -> new LightGray600BlockBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_700_BLOCK = REGISTRY.register("light_gray_700_block", () -> new LightGray700BlockBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_800_BLOCK = REGISTRY.register("light_gray_800_block", () -> new LightGray800BlockBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_900_BLOCK = REGISTRY.register("light_gray_900_block", () -> new LightGray900BlockBlock());
	public static final RegistryObject<Block> LIME_50_BLOCK = REGISTRY.register("lime_50_block", () -> new Lime50BlockBlock());
	public static final RegistryObject<Block> LIME_100_BLOCK = REGISTRY.register("lime_100_block", () -> new Lime100BlockBlock());
	public static final RegistryObject<Block> LIME_200_BLOCK = REGISTRY.register("lime_200_block", () -> new Lime200BlockBlock());
	public static final RegistryObject<Block> LIME_300_BLOCK = REGISTRY.register("lime_300_block", () -> new Lime300BlockBlock());
	public static final RegistryObject<Block> LIME_400_BLOCK = REGISTRY.register("lime_400_block", () -> new Lime400BlockBlock());
	public static final RegistryObject<Block> LIME_500_BLOCK = REGISTRY.register("lime_500_block", () -> new Lime500BlockBlock());
	public static final RegistryObject<Block> LIME_600_BLOCK = REGISTRY.register("lime_600_block", () -> new Lime600BlockBlock());
	public static final RegistryObject<Block> LIME_700_BLOCK = REGISTRY.register("lime_700_block", () -> new Lime700BlockBlock());
	public static final RegistryObject<Block> LIME_800_BLOCK = REGISTRY.register("lime_800_block", () -> new Lime800BlockBlock());
	public static final RegistryObject<Block> LIME_900_BLOCK = REGISTRY.register("lime_900_block", () -> new Lime900BlockBlock());
	public static final RegistryObject<Block> MAGENTA_50_BLOCK = REGISTRY.register("magenta_50_block", () -> new Magenta50BlockBlock());
	public static final RegistryObject<Block> MAGENTA_100_BLOCK = REGISTRY.register("magenta_100_block", () -> new Magenta100BlockBlock());
	public static final RegistryObject<Block> MAGENTA_200_BLOCK = REGISTRY.register("magenta_200_block", () -> new Magenta200BlockBlock());
	public static final RegistryObject<Block> MAGENTA_300_BLOCK = REGISTRY.register("magenta_300_block", () -> new Magenta300BlockBlock());
	public static final RegistryObject<Block> MAGENTA_400_BLOCK = REGISTRY.register("magenta_400_block", () -> new Magenta400BlockBlock());
	public static final RegistryObject<Block> MAGENTA_500_BLOCK = REGISTRY.register("magenta_500_block", () -> new Magenta500BlockBlock());
	public static final RegistryObject<Block> MAGENTA_600_BLOCK = REGISTRY.register("magenta_600_block", () -> new Magenta600BlockBlock());
	public static final RegistryObject<Block> MAGENTA_700_BLOCK = REGISTRY.register("magenta_700_block", () -> new Magenta700BlockBlock());
	public static final RegistryObject<Block> MAGENTA_800_BLOCK = REGISTRY.register("magenta_800_block", () -> new Magenta800BlockBlock());
	public static final RegistryObject<Block> MAGENTA_900_BLOCK = REGISTRY.register("magenta_900_block", () -> new Magenta900BlockBlock());
	public static final RegistryObject<Block> ORANGE_50_BLOCK = REGISTRY.register("orange_50_block", () -> new Orange50BlockBlock());
	public static final RegistryObject<Block> ORANGE_100_BLOCK = REGISTRY.register("orange_100_block", () -> new Orange100BlockBlock());
	public static final RegistryObject<Block> ORANGE_200_BLOCK = REGISTRY.register("orange_200_block", () -> new Orange200BlockBlock());
	public static final RegistryObject<Block> ORANGE_300_BLOCK = REGISTRY.register("orange_300_block", () -> new Orange300BlockBlock());
	public static final RegistryObject<Block> ORANGE_400_BLOCK = REGISTRY.register("orange_400_block", () -> new Orange400BlockBlock());
	public static final RegistryObject<Block> ORANGE_500_BLOCK = REGISTRY.register("orange_500_block", () -> new Orange500BlockBlock());
	public static final RegistryObject<Block> ORANGE_600_BLOCK = REGISTRY.register("orange_600_block", () -> new Orange600BlockBlock());
	public static final RegistryObject<Block> ORANGE_700_BLOCK = REGISTRY.register("orange_700_block", () -> new Orange700BlockBlock());
	public static final RegistryObject<Block> ORANGE_800_BLOCK = REGISTRY.register("orange_800_block", () -> new Orange800BlockBlock());
	public static final RegistryObject<Block> ORANGE_900_BLOCK = REGISTRY.register("orange_900_block", () -> new Orange900BlockBlock());
	public static final RegistryObject<Block> PINK_50_BLOCK = REGISTRY.register("pink_50_block", () -> new Pink50BlockBlock());
	public static final RegistryObject<Block> PINK_100_BLOCK = REGISTRY.register("pink_100_block", () -> new Pink100BlockBlock());
	public static final RegistryObject<Block> PINK_200_BLOCK = REGISTRY.register("pink_200_block", () -> new Pink200BlockBlock());
	public static final RegistryObject<Block> PINK_300_BLOCK = REGISTRY.register("pink_300_block", () -> new Pink300BlockBlock());
	public static final RegistryObject<Block> PINK_400_BLOCK = REGISTRY.register("pink_400_block", () -> new Pink400BlockBlock());
	public static final RegistryObject<Block> PINK_500_BLOCK = REGISTRY.register("pink_500_block", () -> new Pink500BlockBlock());
	public static final RegistryObject<Block> PINK_600_BLOCK = REGISTRY.register("pink_600_block", () -> new Pink600BlockBlock());
	public static final RegistryObject<Block> PINK_700_BLOCK = REGISTRY.register("pink_700_block", () -> new Pink700BlockBlock());
	public static final RegistryObject<Block> PINK_800_BLOCK = REGISTRY.register("pink_800_block", () -> new Pink800BlockBlock());
	public static final RegistryObject<Block> PINK_900_BLOCK = REGISTRY.register("pink_900_block", () -> new Pink900BlockBlock());
	public static final RegistryObject<Block> PURPLE_50_BLOCK = REGISTRY.register("purple_50_block", () -> new Purple50BlockBlock());
	public static final RegistryObject<Block> PURPLE_100_BLOCK = REGISTRY.register("purple_100_block", () -> new Purple100BlockBlock());
	public static final RegistryObject<Block> PURPLE_200_BLOCK = REGISTRY.register("purple_200_block", () -> new Purple200BlockBlock());
	public static final RegistryObject<Block> PURPLE_300_BLOCK = REGISTRY.register("purple_300_block", () -> new Purple300BlockBlock());
	public static final RegistryObject<Block> PURPLE_400_BLOCK = REGISTRY.register("purple_400_block", () -> new Purple400BlockBlock());
	public static final RegistryObject<Block> PURPLE_500_BLOCK = REGISTRY.register("purple_500_block", () -> new Purple500BlockBlock());
	public static final RegistryObject<Block> PURPLE_600_BLOCK = REGISTRY.register("purple_600_block", () -> new Purple600BlockBlock());
	public static final RegistryObject<Block> PURPLE_700_BLOCK = REGISTRY.register("purple_700_block", () -> new Purple700BlockBlock());
	public static final RegistryObject<Block> PURPLE_800_BLOCK = REGISTRY.register("purple_800_block", () -> new Purple800BlockBlock());
	public static final RegistryObject<Block> PURPLE_900_BLOCK = REGISTRY.register("purple_900_block", () -> new Purple900BlockBlock());
	public static final RegistryObject<Block> RED_50_BLOCK = REGISTRY.register("red_50_block", () -> new Red50BlockBlock());
	public static final RegistryObject<Block> RED_100_BLOCK = REGISTRY.register("red_100_block", () -> new Red100BlockBlock());
	public static final RegistryObject<Block> RED_200_BLOCK = REGISTRY.register("red_200_block", () -> new Red200BlockBlock());
	public static final RegistryObject<Block> RED_300_BLOCK = REGISTRY.register("red_300_block", () -> new Red300BlockBlock());
	public static final RegistryObject<Block> RED_400_BLOCK = REGISTRY.register("red_400_block", () -> new Red400BlockBlock());
	public static final RegistryObject<Block> RED_500_BLOCK = REGISTRY.register("red_500_block", () -> new Red500BlockBlock());
	public static final RegistryObject<Block> RED_600_BLOCK = REGISTRY.register("red_600_block", () -> new Red600BlockBlock());
	public static final RegistryObject<Block> RED_700_BLOCK = REGISTRY.register("red_700_block", () -> new Red700BlockBlock());
	public static final RegistryObject<Block> RED_800_BLOCK = REGISTRY.register("red_800_block", () -> new Red800BlockBlock());
	public static final RegistryObject<Block> RED_900_BLOCK = REGISTRY.register("red_900_block", () -> new Red900BlockBlock());
	public static final RegistryObject<Block> YELLOW_50_BLOCK = REGISTRY.register("yellow_50_block", () -> new Yellow50BlockBlock());
	public static final RegistryObject<Block> YELLOW_100_BLOCK = REGISTRY.register("yellow_100_block", () -> new Yellow100BlockBlock());
	public static final RegistryObject<Block> YELLOW_200_BLOCK = REGISTRY.register("yellow_200_block", () -> new Yellow200BlockBlock());
	public static final RegistryObject<Block> YELLOW_300_BLOCK = REGISTRY.register("yellow_300_block", () -> new Yellow300BlockBlock());
	public static final RegistryObject<Block> YELLOW_400_BLOCK = REGISTRY.register("yellow_400_block", () -> new Yellow400BlockBlock());
	public static final RegistryObject<Block> YELLOW_500_BLOCK = REGISTRY.register("yellow_500_block", () -> new Yellow500BlockBlock());
	public static final RegistryObject<Block> YELLOW_600_BLOCK = REGISTRY.register("yellow_600_block", () -> new Yellow600BlockBlock());
	public static final RegistryObject<Block> YELLOW_700_BLOCK = REGISTRY.register("yellow_700_block", () -> new Yellow700BlockBlock());
	public static final RegistryObject<Block> YELLOW_800_BLOCK = REGISTRY.register("yellow_800_block", () -> new Yellow800BlockBlock());
	public static final RegistryObject<Block> YELLOW_900_BLOCK = REGISTRY.register("yellow_900_block", () -> new Yellow900BlockBlock());
}
